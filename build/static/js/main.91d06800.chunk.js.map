{"version":3,"sources":["common/images/MLlogo.svg","common/images/MLlogo.png","components/NavBar/NavBar.js","components/Home/Home.js","components/Info/Item/Item.js","components/Info/Info.js","components/Musica/Musica.js","components/Contacto/Contacto.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","useState","isOpen","setIsOpen","headerColor","setHeaderColor","listenScrollEvent","window","pageYOffset","useEffect","addEventListener","console","log","className","smooth","to","activeClassName","src","Logo","alt","onClick","Home","logo","Item","icono","icon","title","text","split","map","sentence","index","key","Info","items","setItems","fetch","then","res","json","data","id","filter","category","name","Contacto","Main","App","exact","path","component","NotFound","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.91d06800.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MLlogo.da83f257.svg\";","module.exports = __webpack_public_path__ + \"static/media/MLlogo.5156b28d.png\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport Logo from \"../../common/images/MLlogo.svg\";\r\nimport { FaAlignJustify } from \"react-icons/fa\";\r\nimport { NavHashLink as Link } from \"react-router-hash-link\";\r\n\r\nexport default function NavBar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [headerColor, setHeaderColor] = useState(\"white\");\r\n\r\n  const listenScrollEvent = () => {\r\n    window.pageYOffset > 550\r\n      ? setHeaderColor(\"Nav-black\")\r\n      : setHeaderColor(\"Nav-transparent\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", listenScrollEvent);\r\n  });\r\n  console.log(headerColor);\r\n  \r\n  return (\r\n    <div className={`NavBar ${headerColor}`}>\r\n      <div className=\"logo\">\r\n        <span>\r\n          <Link smooth to=\"#home\" activeClassName=\"selected\">\r\n            <img src={Logo} alt=\"logo\" />\r\n          </Link>\r\n        </span>\r\n      </div>\r\n      <div className=\"NavBar-continer-button-menu\">\r\n        <button className=\"NavBar-button\" onClick={() => setIsOpen(!isOpen)}>\r\n          <FaAlignJustify className=\"hamburger\" />\r\n        </button>\r\n        <div className={`NavBar-box ${isOpen ? \"is-open\" : \"\"}`}>\r\n          <Link smooth to=\"#home\">\r\n            <div className=\"NavBar-box-link\" onClick={() => setIsOpen(false)}>\r\n              Inicio\r\n            </div>\r\n          </Link>\r\n          <span>|</span>\r\n          <Link smooth to=\"#info\">\r\n            <div className=\"NavBar-box-link\" onClick={() => setIsOpen(false)}>\r\n              Info\r\n            </div>\r\n          </Link>\r\n          <span>|</span>\r\n          <Link smooth to=\"#musica\">\r\n            <div className=\"NavBar-box-link\" onClick={() => setIsOpen(false)}>\r\n              Musica\r\n            </div>\r\n          </Link>\r\n          <span>|</span>\r\n          <Link smooth to=\"#contacto\">\r\n            <div className=\"NavBar-box-link\" onClick={() => setIsOpen(false)}>\r\n              Contacto\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport logo from \"../../common/images/MLlogo.png\";\r\n\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"Home-wrapper\">\r\n          <div className=\"Home-intro\">\r\n          <img src={logo} alt=\"logo\"/>\r\n              <p>Música para el bienestar, la integración social y el desarrollo personal.</p>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { GiCutDiamond, GiBullseye, GiMicrophone } from \"react-icons/gi\";\r\nimport { FaEye, FaMusic, FaHandHoldingHeart } from \"react-icons/fa\";\r\n\r\nexport default function Item({ icon, title, text }) {\r\n  let icono;\r\n\r\n  if (icon === \"GiCutDiamond\") {\r\n    icono = <GiCutDiamond className=\"Info-icono\" />;\r\n  } else if (icon === \"GiBullseye\") {\r\n    icono = <GiBullseye className=\"Info-icono\" />;\r\n  } else if (icon === \"FaEye\") {\r\n    icono = <FaEye className=\"Info-icono\" />;\r\n  } else if (icon === \"GiMicrophone\") {\r\n    icono = <GiMicrophone className=\"Info-icono\" />;\r\n  } else if (icon === \"FaMusic\") {\r\n    icono = <FaMusic className=\"Info-icono\" />;\r\n  }else if (icon === \"FaHandHoldingHeart\") {\r\n    icono = <FaHandHoldingHeart className=\"Info-icono\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Info-item col-md-4\">\r\n      {icono}\r\n      <h3 className=\"Info-item-heading\">{title}</h3>\r\n      <ul>\r\n        {text.split('. ').map((sentence, index) => (\r\n          <li key={index}>{sentence}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Info.css\";\r\nimport Item from \"./Item/Item\";\r\n// import Items from \"./items.json\";\r\n\r\nexport default function Info() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/items/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setItems(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Info\" id=\"info\">\r\n      <div className=\"Info-block Info-block-pink\">\r\n        <h2 className=\"Info-heading\">Lo que queremos</h2>\r\n        <div className=\"Info-wrapper container\">\r\n          <div className=\"row\">\r\n            {items.filter(({ category }) => category === \"queremos\").map(\r\n              ({ icon, name, text }) => (\r\n                <Item icon={icon} title={name} text={text} />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Info-block Info-block-blue\">\r\n        <h2 className=\"Info-heading\">Lo que queremos</h2>\r\n        <div className=\"Info-wrapper container\">\r\n          <div className=\"row\">\r\n            {items.filter(({ category }) => category === \"hacemos\").map(\r\n              ({ icon, name, text }) => (\r\n                <Item icon={icon} title={name} text={text} />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Musica.css\";\r\n\r\n\r\nexport default function Info() {\r\n  return (\r\n    <div className=\"Musica\" id=\"musica\">\r\n      Musica\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Contacto.css\";\r\n\r\n\r\nexport default function Contacto() {\r\n  return (\r\n    <div className=\"Contacto\" id=\"contacto\">\r\n      Contacto\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Home from \"../Home/Home\";\r\nimport Info from \"../Info/Info\";\r\nimport Musica from \"../Musica/Musica\";\r\nimport Contacto from \"../Contacto/Contacto\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div id=\"home\">\r\n      <NavBar />\r\n      <Home />\r\n      <Info id=\"info\" />\r\n      <Musica id=\"musica\" />\r\n      <Contacto id=\"contacto\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"; \r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Main from './components/Main/Main';\r\nimport NotFound from './components/NotFound/NotFound';\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Main} />\r\n          <Route exact path=\"/not-found\" component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}